let temporyText = ''
let tableAT = []
let elementsS = [];
let bigFinal = []

let simpleTempory = []
let tempory = []
let i = 0;
if (Object.keys(attrState).length > 0) {

    //let resutArray = []

    let it = 0;

    let comment = ''
    Object.keys(attrState).map((data, key) => {
        for (let index = 0; index < attrState[data].length; index++) {
            temporyText += 'filter[f_optid][]=' + attrState[data][index] + '&'
        }
        tableAT.push({ [data]: temporyText })
        temporyText = '';
        return tableAT;
    })
    for (let index = 0; index < tableAT.length; index++) {
        if (tableAT[index][Object.keys(tableAT[index])] === '') {
            delete tableAT[index][Object.keys(tableAT[index])];
        }
        let finalData = [];
        axios.get(_GLobal_Link.link + "product?include=media&" + Object.values(tableAT[index]).toString() + "&filter[f_catid]=" + id, {
            headers: {
                "content-type": "application/json",
                'Access-Control-Allow-Credentials': true,
                'Access-Control-Allow-Origin': true
            },
            // eslint-disable-next-line no-loop-func
        }).then((res) => {
            for (let index2 = 0; index2 < res.data.data.length; index2++) {
                finalData.push(res.data.data[index2].links.self.href)
            }
            elementsS.push({ [Object.keys(tableAT[index])]: finalData })
            if (tableAT.length === elementsS.length) {

                for (let index3 = 0; index3 < elementsS.length; index3++) {
                    if (Object.keys(elementsS[index3]).toString() !== '') {
                        bigFinal.push(elementsS[index3])

                        for (let index = 0; index < bigFinal.length; index++) {
                            //  console.log(index)

                            // eslint-disable-next-line no-loop-func
                            Object.values(bigFinal[index]).map((data, key) => {
                                data.forEach((el) => {
                                    simpleTempory.push(el)
                                    i += 1;
                                    if (i == data.length) {
                                        i = 0;
                                    }
                                });
                            })
                        }
                        if (i == 0 && simpleTempory.length > 0) {
                            tempory.push(simpleTempory)
                            let result = {}
                            let bory = []

                            for (let index = 0; index < tempory[0].length; index++) {
                                if (!result[tempory[0][index]])
                                    result[tempory[0][index]] = 0
                                ++result[tempory[0][index]]

                                setresutArray((prev) => [...prev, result])


                                Object.values(result).map((data, key) => {
                                    if (data == bigFinal.length) {
                                        Object.keys(result).map((data2, key) => {
                                            if (result[data2] == data) {
                                                //   console.log(data2)
                                                bory.push(bory)
                                            }
                                        })
                                    }
                                })


                            }
                            simpleTempory = []
                            tempory = [];

                        }
                        //  break;
                    }

                }
            }
        })
    }

    //console.log(bigFinal)
    setlastelemrnts(elementsS)
}